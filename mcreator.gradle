repositories {
  maven {
      url = uri("https://maven.pkg.github.com/endorh/simple-config")
      name = "SimpleConfig"
      credentials {
          username = "gradle" // Not important, must not be empty
          // read:packages only GitHub token published by Endor H
          // You may as well use your own, until GitHub supports unauthenticated maven read access
          //   https://github.com/orgs/community/discussions/26634#discussioncomment-3252637
          password = "\u0067hp_SjEzHOWgAWIKVczipKZzLPPJcCMHHd1LILfK"
      }
      content {
      // Improve dependency resolution speed, by explicitly declaring the only hosted group
      includeGroup("endorh.simpleconfig")
      }
  }
}
dependencies {
    compileOnly "endorh.simpleconfig:simpleconfig-1.18.2:1.0.5:api"

    runtimeOnly fg.deobf("endorh.simpleconfig:simpleconfig-1.18.2:1.0.5")
}

def extraModsDir = 'extra-mods-1.18.2'
task addnewfoldersmods(type: DefaultTask){
  ant.mkdir(dir: 'extra-mods-1.18.2/');
}
repositories {
  flatDir {
  name "extra-mods" 
  dir file(extraModsDir)
  }
}

dependencies 
{
  for (extraModJar in fileTree(dir: extraModsDir, include: '*.jar')) {
  def basename = extraModJar.name.substring(0, extraModJar.name.length() - ".jar".length()) 
  def versionSep = basename.lastIndexOf('-') 
  assert versionSep != -1 
  def artifactId = basename.substring(0, versionSep) 
  def version = basename.substring(versionSep + 1)
  runtimeOnly fg.deobf("extra-mods:$artifactId:$version")}
}

minecraft {
 mappings channel: 'official', version: '1.18.2'
  accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
 runs {
  client {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'
      property 'mixin.env.remapRefMap', 'true'
      property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
      mods {
          examplemod {
              source sourceSets.main
          }
      }
  }
  server {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'
      property 'mixin.env.remapRefMap', 'true'
      property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
      mods {
          examplemod {
              source sourceSets.main
          }
      }
        }
      }
          }

